module(
    name = "rules_cuda_examples",
    version = "0.0.0",
    compatibility_level = 1,
)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

bazel_dep(name = "rules_cuda", version = "0.1.3")
bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "platforms", version = "0.0.9")

local_path_override(
    module_name = "rules_cuda",
    path = "..",
)

toolchain_parallel = use_extension("@rules_cuda//cuda:remote_cuda.bzl", "toolchain_parallel", dev_dependency = True)
toolchain_parallel.install(
    name = "cuda-linux-x86_64",
    platform = "linux-x86_64",
    version = "11.8.0",
)
toolchain_parallel.install(
    name = "cuda-linux-aarch64",
    platform = "linux-aarch64",
    version = "11.8.0",
)
toolchain_parallel.install(
    name = "cuda-linux-sbsa",
    platform = "linux-sbsa",
    version = "11.8.0",
)
use_repo(toolchain_parallel, "cuda-linux-aarch64", "cuda-linux-sbsa", "cuda-linux-x86_64")

toolchain_cross_platform = use_extension("@rules_cuda//cuda:remote_cuda.bzl", "toolchain_cross_platform")

# Create a toplevel repository to select between the cross-platform repositories
toolchain_cross_platform.install(
    name = "local_cuda",
    cuda_repositories = {
        "@cuda-linux-x86_64": "linux-x86_64",
        "@cuda-linux-aarch64": "linux-aarch64",
        "@cuda-linux-sbsa": "linux-sbsa",
    },
)
use_repo(toolchain_cross_platform, "local_cuda")

register_toolchains(
    "@cuda-linux-x86_64//toolchain:nvcc-toolchain",
    "@cuda-linux-aarch64//toolchain:nvcc-toolchain",
    "@cuda-linux-sbsa//toolchain:nvcc-toolchain",
)

#################################
# Dependencies for nccl example #
#################################
http_archive(
    name = "nccl",
    build_file = "@rules_cuda_examples//nccl:nccl.BUILD",
    sha256 = "83b299cfc2dfe63887dadf3590b3ac2b8b2fd68ec5515b6878774eda39a697d2",
    strip_prefix = "nccl-9814c75eea18fc7374cde884592233b6b7dc055b",
    urls = ["https://github.com/nvidia/nccl/archive/9814c75eea18fc7374cde884592233b6b7dc055b.tar.gz"],
)

http_archive(
    name = "nccl-tests",
    build_file = "@rules_cuda_examples//nccl:nccl-tests.BUILD",
    patch_args = [
        "-p1",
    ],
    patches = ["@rules_cuda_examples//nccl:nccl-tests-clang.patch"],
    sha256 = "946adb84f63aec66aea7aab9739d41df81c24f783e85fba6328ba243cfc057e0",
    strip_prefix = "nccl-tests-1a5f551ffd6e3271982b03a9d5653a3f6ba545fa",
    urls = ["https://github.com/nvidia/nccl-tests/archive/1a5f551ffd6e3271982b03a9d5653a3f6ba545fa.tar.gz"],
)

#################################
# Dependency for thrust example
#################################
http_archive(
    name = "thrust",
    build_file = "@rules_cuda//third_party:thrust.BUILD",
    sha256 = "d021e37f5aac30fd1b9737865399feb57db8e601ae2fc0af3cd41784435e9523",
    strip_prefix = "thrust-1.17.2",
    url = "https://github.com/NVIDIA/thrust/archive/refs/tags/1.17.2.tar.gz",
)

http_archive(
    name = "cub",
    build_file = "@rules_cuda//third_party:cub.BUILD",
    sha256 = "1013a595794548c359f22c07e1f8c620b97e3a577f7e8496d9407f74566a3e2a",
    strip_prefix = "cub-1.17.2",
    url = "https://github.com/NVIDIA/cub/archive/refs/tags/1.17.2.tar.gz",
)
